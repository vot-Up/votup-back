# Generated by Django 5.1 on 2025-05-12 21:12

import account.managers
import account.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "cellphone",
                    models.CharField(
                        error_messages={"unique": "Esse numéro de celular já está sendo usado por outro usuário!"},
                        max_length=64,
                        null=True,
                        unique=True,
                    ),
                ),
                ("password", models.CharField(max_length=104)),
                ("name", models.CharField(max_length=256, null=True)),
                (
                    "email",
                    models.EmailField(
                        error_messages={"unique": "Esse e-mail já está sendo usado por outro usuário!"},
                        max_length=256,
                        null=True,
                        unique=True,
                    ),
                ),
                ("last_login", models.DateTimeField(null=True)),
                ("is_superuser", models.BooleanField(default=False, null=True)),
                ("is_staff", models.BooleanField(default=False, null=True)),
                ("avatar", models.ImageField(null=True, upload_to=account.models.upload_to)),
                ("file_name", models.CharField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
                "managed": True,
            },
            managers=[
                ("objects", account.managers.UserManager()),
            ],
        ),
    ]
